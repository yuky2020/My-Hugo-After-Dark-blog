<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <docs>https://blogs.law.harvard.edu/tech/rss</docs>
    <title>Week 3 HW on Matteo Bianchi personal site and blog</title>
    <link>https://www.matteobianchi.eu/statistics-posts/week_3/</link>
    <description>Recent content in Week 3 HW on Matteo Bianchi personal site and blog</description>
    <image>
      <title>Week 3 HW on Matteo Bianchi personal site and blog</title>
      <link>https://www.matteobianchi.eu/statistics-posts/week_3/</link>
      <url>https://source.unsplash.com/collection/983219/2000x1322</url>
    </image>
    <ttl>1440</ttl>
    <generator>After Dark 9.2.3 (Hugo 0.80.0)</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 20 Nov 2021 18:04:12 UT</lastBuildDate>
    <atom:link href="https://www.matteobianchi.eu/statistics-posts/week_3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2_RA</title>
      <link>https://www.matteobianchi.eu/statistics-posts/week_3/2ra/</link>
      <pubDate>Tue, 05 Oct 2021 18:03:36 UT</pubDate>
      <dc:creator>Matteo Bianchi</dc:creator>
      <guid>https://www.matteobianchi.eu/statistics-posts/week_3/2ra/</guid>
      <description>2_RA assignament Request Do a review about charts useful for statistics and data presentation. What is the chart type that impressed you most and why ?
Scatterplot Very usefull when you want to show relationship between two continus variables: make correlation between variabliles easy visible.[1]
Line Plot or Line Chart The line chart provides a meaningful comparison between two or more than two series,is also very useful in visualzing time series data or data changes over time,is the classical chart for market data: Column Chart or Vertical Bar Chart This is by far the most common chart, useful when comparing categorical or ordinal data, for illustrate distribution and for showing proportions or percentages of a whole.</description>
      <category domain="https://www.matteobianchi.eu/categories/statistic">Statistic</category>
      <content:encoded><![CDATA[2_RA assignament Request Do a review about charts useful for statistics and data presentation. What is the chart type that impressed you most and why ?
Scatterplot Very usefull when you want to show relationship between two continus variables: make correlation between variabliles easy visible.[1]
Line Plot or Line Chart The line chart provides a meaningful comparison between two or more than two series,is also very useful in visualzing time series data or data changes over time,is the classical chart for market data: Column Chart or Vertical Bar Chart This is by far the most common chart, useful when comparing categorical or ordinal data, for illustrate distribution and for showing proportions or percentages of a whole.
Horizontal Bar Chart Same as before but flipped, very easy to read useful for presentation Area Chart [2]Area chart combines Pie chart and Line chart features, and is one of the graph that provide most info, it&amp;rsquo;s possible to combine more series to make comparison:
Bubble Chart Make possible to display 3-dimensional data in 2 dimension infact the size of the bubble defines the value of the third dimension
Pie Chart Very useful when we need to understand the relative proportion of each value in a data distribution,anyway data could be difficult to understand[1]
Waffle Chart or Square Pie Chart Usefull to get an high level view of contribution to a whole, used also for example by git hub to show per day contributions Spider Charts (Personal Favorite ) To visually compare three or more quantitative variables,the best option is to use a radar chart, also known as a spider or star chart. The chart usually consists of a series of radii, each representing a different category, that splay out from a center point like spokes.[2] The length of each “spoke” is proportionate to the value being compared. For each category, the spokes are then connected with a line of a designated pattern or color, forming a star-like shape with points equal to the number of categories. Why i choose this ? This chart can do comparison between various attribute at the same time and remain easy to understand and eye-catching, is very used and usefull for exemple in benchmarking and performance analysis [1] url:&amp;ldquo;https://medium.com/analytics-vidhya/top-10-most-useful-charts-in-data-visualization-a4c9365d03e4&amp;quot; [2] url:&amp;ldquo;https://visme.co/blog/types-of-graphs/&amp;quot;
]]></content:encoded>
    </item>
    <item>
      <title>3_RA</title>
      <link>https://www.matteobianchi.eu/statistics-posts/week_3/3ra/</link>
      <pubDate>Tue, 05 Oct 2021 18:03:36 UT</pubDate>
      <dc:creator>Matteo Bianchi</dc:creator>
      <guid>https://www.matteobianchi.eu/statistics-posts/week_3/3ra/</guid>
      <description>3_RA assignament Request Do a comprehensive research about the GRAPHICS object and all its members (to get ready to create any statistical chart.)
How we have used Graphics Usualy in our project we use the graphics class associated with a Bitmap(attached to an image box ) ,the Graphics class infact provides methods for drawing objects to the display device,also remember that Graphics is associated with a specific device context.[1]It&amp;rsquo;s basic mean is to draw object in the graphical context were is assigned</description>
      <category domain="https://www.matteobianchi.eu/categories/statistic">Statistic</category>
      <content:encoded><![CDATA[3_RA assignament Request Do a comprehensive research about the GRAPHICS object and all its members (to get ready to create any statistical chart.)
How we have used Graphics Usualy in our project we use the graphics class associated with a Bitmap(attached to an image box ) ,the Graphics class infact provides methods for drawing objects to the display device,also remember that Graphics is associated with a specific device context.[1]It&amp;rsquo;s basic mean is to draw object in the graphical context were is assigned
Draw We can draw many different shapes and lines by using a Graphics object anc calling his methods(these methods include DrawLine, DrawArc, DrawClosedCurve, DrawPolygon,DrawElipse and DrawRectangle),we can for sure starting from this create more complex method to draw for example meaningfull charts or 3d graphics,or 2D graphics, in fact we could also see the graphics class as our API to .NET Graphical engine. Text writing For sure we can also arrange text on the screen using graphics,selecting his size font and brushes using the DrowsString method es: DrawString(&amp;ldquo;yourText&amp;rdquo;, new Font(&amp;ldquo;Tahoma&amp;rdquo;,8), Brushes.Black, rectf); [1]&amp;ldquo;url&amp;rdquo;:&amp;ldquo;https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics?view=windowsdesktop-5.0#methods&amp;quot;
]]></content:encoded>
    </item>
    <item>
      <title>4_A</title>
      <link>https://www.matteobianchi.eu/statistics-posts/week_3/4a/</link>
      <pubDate>Tue, 05 Oct 2021 18:03:36 UT</pubDate>
      <dc:creator>Matteo Bianchi</dc:creator>
      <guid>https://www.matteobianchi.eu/statistics-posts/week_3/4a/</guid>
      <description>4_A assignament Request Create a program - in both languages C# and VB.NET (and optionally in js) - to read data from a CSV file, and store it into a suitable collection of suitably designed objects, for further processing. Compute mean and standard deviation and frequency distribution for at least one of the variable, and for one pair of variables.
My Solution   Code in C#
Code in VB.net</description>
      <category domain="https://www.matteobianchi.eu/categories/statistic">Statistic</category>
      <content:encoded><![CDATA[4_A assignament Request Create a program - in both languages C# and VB.NET (and optionally in js) - to read data from a CSV file, and store it into a suitable collection of suitably designed objects, for further processing. Compute mean and standard deviation and frequency distribution for at least one of the variable, and for one pair of variables.
My Solution   Code in C#
Code in VB.net
Class Elemento Distribuzione in C# class ElementoDisribuzione { private String name; private Dictionary&amp;lt;String, Tuple&amp;lt;Object,Type&amp;gt;&amp;gt; variabili; public ElementoDisribuzione(String nome) { this.name = nome; this.variabili = new Dictionary&amp;lt;string, Tuple&amp;lt;Object, Type&amp;gt;&amp;gt;(); } public void setVariable(String name, Tuple&amp;lt;Object, Type&amp;gt;s) { this.variabili.Add(name,s); } public bool getVariable(String name, out Tuple&amp;lt;Object, Type&amp;gt; ret) { if (this.variabili.TryGetValue(name, out ret)) return true; else return false; } public Dictionary&amp;lt;String, Tuple&amp;lt;Object, Type&amp;gt;&amp;gt; getVariabili() { return this.variabili; } }  Class MediaCalOnline in C# class MediaCalOnline { Dictionary&amp;lt;String, double&amp;gt; medieAritmetica; Dictionary&amp;lt;String, int&amp;gt; numeroElementi; public MediaCalOnline() { medieAritmetica = new Dictionary&amp;lt;string, double&amp;gt;(); numeroElementi = new Dictionary&amp;lt;String, int&amp;gt;(); } public void addAttribute(String nome, double value) { double tmp; int i; if (medieAritmetica.ContainsKey(nome)) { medieAritmetica.TryGetValue(nome, out tmp); numeroElementi.TryGetValue(nome, out i); i&#43;&#43;; tmp = tmp &#43; (value - tmp) / i; numeroElementi.Remove(nome); medieAritmetica.Remove(nome); medieAritmetica.Add(nome, tmp); numeroElementi.Add(nome, i); } else { medieAritmetica.Add(nome, value); numeroElementi.Add(nome, 1); } } public bool getMedia(String name,out double i) { if (medieAritmetica.TryGetValue(name, out i)) return true; else return false; } public void addElemento(ElementoDisribuzione e) { foreach (var item in e.getVariabili()) if (item.Value.Item2 == typeof(Double)) addAttribute(item.Key,(double) item.Value.Item1); } public bool getStandardDeviation(String name, List&amp;lt;Double&amp;gt; list, out double i) { double media; i = 0; if (!medieAritmetica.TryGetValue(name, out media)) return false; foreach (double elemnt in list) { i = i &#43; ((elemnt - media) * (elemnt - media)); } i = i / list.Count; i = Math.Sqrt(i); return true; } }  Class Distribuzione in C# class Distribuzione { private Dictionary&amp;lt;String, SortedDictionary&amp;lt;Tuple&amp;lt;double, double&amp;gt;, int&amp;gt;&amp;gt; distrN; private Dictionary&amp;lt;string, SortedDictionary&amp;lt;String, int&amp;gt;&amp;gt; distrS; double intervall = 10; public Distribuzione() { distrN = new Dictionary&amp;lt;String, SortedDictionary&amp;lt;Tuple&amp;lt;double, double&amp;gt;, int&amp;gt;&amp;gt;(); distrS = new Dictionary&amp;lt;String, SortedDictionary&amp;lt;String, int&amp;gt;&amp;gt;(); } //intervall standard 10  public void addAttributNDef(String s, double i) { addAttributeN(s, i, intervall); } public void addAttributeN(String s, double value, double inte) { SortedDictionary&amp;lt;Tuple&amp;lt;double, double&amp;gt;, int&amp;gt; actualdistr; double min, max; int i = 1; min = value - (value % inte); max = value &#43; (inte - (value % inte)); Tuple&amp;lt;double, double&amp;gt; tmp = new Tuple&amp;lt;double, double&amp;gt;(min, max); if (!distrN.TryGetValue(s, out actualdistr)) { actualdistr = new SortedDictionary&amp;lt;Tuple&amp;lt;double, double&amp;gt;, int&amp;gt;(); actualdistr.Add(tmp, 1); distrN.Add(s, actualdistr); } else { if (!actualdistr.TryGetValue(tmp, out i)) actualdistr.Add(tmp, 1); else { i&#43;&#43;; actualdistr.Remove(tmp); actualdistr.Add(tmp, i); } distrN.Remove(s); distrN.Add(s, actualdistr); } } private void addAttributeS(string key, String value) { SortedDictionary&amp;lt;String, int&amp;gt; actualdistrS; int i=1; if (!distrS.TryGetValue(key, out actualdistrS)) { actualdistrS = new SortedDictionary&amp;lt;String, int&amp;gt;(); actualdistrS.Add(value, 1); distrS.Add(key, actualdistrS); } else { if (!actualdistrS.TryGetValue(value, out i)) actualdistrS.Add(value, 1); else { i&#43;&#43;; actualdistrS.Remove(value); actualdistrS.Add(value, i); } distrS.Remove(key); distrS.Add(key, actualdistrS); } } public void addElemento(ElementoDisribuzione e, double inter) { foreach (var item in e.getVariabili()) { if (item.Value.Item2 == typeof(string)) this.addAttributeS(item.Key, (String)item.Value.Item1); else this.addAttributeN(item.Key, (double)item.Value.Item1, inter); } } public void addElementoDef(ElementoDisribuzione e) { addElemento(e, intervall); } public bool getdistribuzioneN(string s, out SortedDictionary&amp;lt;Tuple&amp;lt;double, double&amp;gt;, int&amp;gt; req) { if (distrN.TryGetValue(s, out req)) return true; else return false; } public bool getdistribuzioneS(string s, out SortedDictionary&amp;lt;String, int&amp;gt; req) { if (distrS.TryGetValue(s, out req)) return true; else return false; } public string[,] getbivariantmatrix(List&amp;lt;string&amp;gt; bivariante, Dictionary&amp;lt;int, ElementoDisribuzione&amp;gt;.ValueCollection values, out int numeroRighe, out int numeroColonnne) { string[] variabili = bivariante.ToArray(); SortedDictionary&amp;lt;Tuple&amp;lt;double, double&amp;gt;, int&amp;gt; columns; SortedDictionary&amp;lt;Tuple&amp;lt;Double, double&amp;gt;, int&amp;gt; rows; int i, j = 0; distrN.TryGetValue(variabili[0], out columns); distrN.TryGetValue(variabili[1], out rows); //mi ricavo gli intervalli  double intervalloRow = 0; while (intervalloRow == 0) { intervalloRow = rows.ElementAt(j).Key.Item2 - rows.ElementAt(j).Key.Item1; j&#43;&#43;; } j = 0; double intervalloCol = 0; while (intervalloCol == 0) {intervalloCol = columns.ElementAt(j).Key.Item2 - columns.ElementAt(j).Key.Item1; j&#43;&#43;; } numeroColonnne = columns.Count(); numeroRighe = rows.Count(); String[,] outputM = new String[numeroRighe&#43;1,numeroColonnne&#43;1]; int[,] outputMV = new int[numeroRighe, numeroColonnne]; //inizilizo la matrice outputMatriceValori  for (i = 0; i &amp;lt; numeroRighe; i&#43;&#43;) for (j = 0; j &amp;lt; numeroColonnne; j&#43;&#43;) outputMV[i,j] = 0; i = 1; j = 1; outputM[0, 0] = &amp;#34; &amp;#34;; // riempo gli estremi della tabella  foreach(var column in columns.Keys) { outputM[0, i] = column.ToString(); i&#43;&#43;; } foreach (var row in rows.Keys) { outputM[j, 0] = row.ToString(); j&#43;&#43;; } //cerco l&amp;#39;intervallo giusto per entrambi e li carico  foreach (var elm in values) { bool trov0 = false; bool trov1 = false; Tuple&amp;lt;Object, Type&amp;gt; tmpv0; Tuple&amp;lt;Object, Type&amp;gt; tmpv1; elm.getVariable(variabili[0], out tmpv0); elm.getVariable(variabili[1], out tmpv1); i = 0; j = 0 ; while (!trov0&amp;amp;&amp;amp; i&amp;lt;numeroColonnne) { if (((double)tmpv0.Item1 - columns.Keys.ElementAt(i).Item1) &amp;lt;= intervalloCol) trov0 = true; else i&#43;&#43;; } while (!trov1&amp;amp;&amp;amp;j&amp;lt;numeroRighe) { if ((double)tmpv1.Item1 - rows.Keys.ElementAt(j).Item1 &amp;lt;= intervalloCol) trov1 = true; else j&#43;&#43;; } if(trov0 &amp;amp;&amp;amp; trov1)outputMV[j, i] &#43;= 1; } for (i = 1; i &amp;lt;= numeroColonnne; i&#43;&#43;) for (j = 1; j &amp;lt;= numeroRighe; j&#43;&#43;) outputM[j, i] = outputMV[j - 1, i - 1].ToString(); return outputM; } } }  Main Form in C# public partial class Form1 : Form { public Form1() { InitializeComponent(); } Dictionary&amp;lt;int, ElementoDisribuzione&amp;gt; csvContent = new Dictionary&amp;lt;int, ElementoDisribuzione&amp;gt;(); Distribuzione distr = new Distribuzione(); MediaCalOnline medie = new MediaCalOnline(); List&amp;lt;String&amp;gt; attributename = new List&amp;lt;string&amp;gt;(); List&amp;lt;String&amp;gt; bivariante = new List&amp;lt;string&amp;gt;();//per ora poi diventera n variante;  private void button1_Click(object sender, EventArgs e) { var filePath = string.Empty; openFileDialog1.InitialDirectory = &amp;#34;c:\\&amp;#34;; openFileDialog1.Filter = &amp;#34;csv files (*.csv)|*.csv|All files (*.*)|*.*&amp;#34;; openFileDialog1.FilterIndex = 2; openFileDialog1.RestoreDirectory = true; if (openFileDialog1.ShowDialog() == DialogResult.OK) { //Get the path of specified file  filePath = openFileDialog1.FileName; //Read the contents of the file into a stream  using (TextFieldParser csvParser = new TextFieldParser(filePath)) { csvParser.CommentTokens = new string[] { &amp;#34;#&amp;#34; }; csvParser.SetDelimiters(new string[] { &amp;#34;,&amp;#34; }); csvParser.HasFieldsEnclosedInQuotes = true; // Save the row with the column names  string[] fieldsNames = csvParser.ReadFields(); attributename.AddRange(fieldsNames); int i = 0; while (!csvParser.EndOfData) { // Read current line fields, pointer moves to the next line.  string[] fields = csvParser.ReadFields(); ElementoDisribuzione elem = new ElementoDisribuzione(fields[0]); int j = 0; foreach (String field in fields) { if (!String.IsNullOrEmpty(field)) { double tmp; if (Double.TryParse(field, out tmp)) { elem.setVariable(fieldsNames[j], new Tuple&amp;lt;Object, Type&amp;gt;(tmp, tmp.GetType())); medie.addAttribute(fieldsNames[j], tmp); } else elem.setVariable(fieldsNames[j], new Tuple&amp;lt;Object, Type&amp;gt;(field, field.GetType())); } j&#43;&#43;; } csvContent.Add(i, elem); distr.addElementoDef(elem); i&#43;&#43;; } } button2.Visible = true; } } private void button2_Click(object sender, EventArgs e) { ; foreach (var elem in attributename) contextMenuStrip1.Items.Add(elem); contextMenuStrip1.Visible = true; } private void contextMenuStrip1_Opening(object sender, CancelEventArgs e) { } private void contextMenuStrip1_ItemClicked(object sender, ToolStripItemClickedEventArgs e) { richTextBox1.Text &#43;= &amp;#34;-------------------------------------------------------------&amp;#34; &#43; Environment.NewLine; richTextBox1.Text &#43;= e.ClickedItem.Text &#43; Environment.NewLine; double media = 0; double stdVariation; List&amp;lt;Double&amp;gt; values=new List&amp;lt;double&amp;gt;(0); SortedDictionary&amp;lt;Tuple&amp;lt;double, double&amp;gt;, int&amp;gt; firstdistr; medie.getMedia(e.ClickedItem.Text, out media); //se la media è diversa da zero sono sicuro che è double  if (media != 0) { Tuple&amp;lt;Object, Type&amp;gt; tmp; foreach (var elm in csvContent.Values) { elm.getVariable(e.ClickedItem.Text, out tmp); values.Add((double)tmp.Item1); } medie.getStandardDeviation(e.ClickedItem.Text, values,out stdVariation); distr.getdistribuzioneN(e.ClickedItem.Text, out firstdistr); foreach (var el in firstdistr) { richTextBox1.Text &#43;= el.Key.ToString() &#43; &amp;#34; : &amp;#34; &#43; el.Value &#43; Environment.NewLine; } } else stdVariation = 0; richTextBox1.Text &#43;= e.ClickedItem &#43; &amp;#34; with average: &amp;#34; &#43; media &#43; &amp;#34; and standard variation: &amp;#34; &#43; stdVariation&#43; Environment.NewLine; bivariante.Add(e.ClickedItem.Text); button2.Visible = false; foreach (var elem in attributename) contextMenuStrip2.Items.Add(elem); contextMenuStrip2.Visible = true; } private void contextMenuStrip2_ItemClicked(object sender, ToolStripItemClickedEventArgs e) { richTextBox1.Text &#43;= &amp;#34;-------------------------------------------------------------&amp;#34; &#43; Environment.NewLine; richTextBox1.Text &#43;= e.ClickedItem.Text &#43; Environment.NewLine; double media2 = 0; double stdVariation; List&amp;lt;Double&amp;gt; values = new List&amp;lt;double&amp;gt;(0); SortedDictionary&amp;lt;Tuple&amp;lt;double,double&amp;gt;,int&amp;gt; seconddistr; bool isDouble = false; medie.getMedia(e.ClickedItem.Text, out media2); if (media2 != 0) { isDouble = true; Tuple&amp;lt;Object, Type&amp;gt; tmp; foreach (var elm in csvContent.Values) { elm.getVariable(e.ClickedItem.Text, out tmp); values.Add((double)tmp.Item1); } medie.getStandardDeviation(e.ClickedItem.Text, values, out stdVariation); distr.getdistribuzioneN(e.ClickedItem.Text, out seconddistr); foreach (var el in seconddistr) { richTextBox1.Text &#43;= el.Key.ToString() &#43;&amp;#34; : &amp;#34; &#43; el.Value &#43;Environment.NewLine; } } else stdVariation = 0; richTextBox1.Text &#43;= e.ClickedItem &#43; &amp;#34; with average: &amp;#34; &#43; media2 &#43; &amp;#34; and standard variation: &amp;#34; &#43; stdVariation &#43; Environment.NewLine; bivariante.Add(e.ClickedItem.Text); richTextBox1.Text &#43;= Environment.NewLine; int nr, nc; String[,] bivariantMatrix = distr.getbivariantmatrix(bivariante, csvContent.Values, out nr, out nc); for (int i = 0; i &amp;lt;= nr; i&#43;&#43;) { richTextBox1.Text &#43;= Environment.NewLine; for (int j = 0; j &amp;lt;= nc; j&#43;&#43;) { richTextBox1.Text &#43;= bivariantMatrix[i, j].PadLeft(6); } } } }  ]]></content:encoded>
    </item>
    <item>
      <title>4_R</title>
      <link>https://www.matteobianchi.eu/statistics-posts/week_3/4r/</link>
      <pubDate>Tue, 05 Oct 2021 18:03:36 UT</pubDate>
      <dc:creator>Matteo Bianchi</dc:creator>
      <guid>https://www.matteobianchi.eu/statistics-posts/week_3/4r/</guid>
      <description>4_R assignament Request Explain what are marginal, joint and conditional distributions and how we can explain the Bayes theorem using relative frequencies. Explain the concept of statistical independence and why, in case of independence, the relative joint frequencies are equal to the products of the corresponding marginal frequencies. Margianal Are the distributions that we find on the margin of the bivariate distribution matrix, describes the frequenceis in wich one variabiles has a certain value without restriction on the value of the other</description>
      <category domain="https://www.matteobianchi.eu/categories/statistic">Statistic</category>
      <content:encoded><![CDATA[4_R assignament Request Explain what are marginal, joint and conditional distributions and how we can explain the Bayes theorem using relative frequencies. Explain the concept of statistical independence and why, in case of independence, the relative joint frequencies are equal to the products of the corresponding marginal frequencies. Margianal Are the distributions that we find on the margin of the bivariate distribution matrix, describes the frequenceis in wich one variabiles has a certain value without restriction on the value of the other
Conditional ditribution Are the distribution that we find on a row or on a column of the bivariate distribution matrix, describes the frequenceis in which one variabiles has a certain value taken the other fixed
Joint distribution Describes the frequency in which a particular values for both the variable appear.
Bayes theorem and realtive frequencies Bayes theorem talk about probability but relative frequency are nothing more than &amp;ldquo;experimental&amp;rdquo; probability so we can use it to better understand the theorem and explain it, in fact from the matrix we can calculate all the conditional probability,for example:
 we have two dice x,y one with 6 face x and the other with 8 we do a lot of random tentative what are the probabilty of 3 on x given y=6     X/Y 1 2 3 4 5 6 7 8     1 100 100 100 100 100 100 100 100   2 100 100 100 100 100 100 100 100   3 100 100 100 100 100 100 100 100   4 100 100 100 100 100 100 100 100   5 100 100 100 100 100 100 100 100   6 100 100 100 100 100 100 100 100     For finding this (p(A\B)= p(x=3\y=6)) we look at the table and see that there is 100 in the column x=3, row y=6 point so the probababilty of this event will be of 100/ on something and in this case something is all the throwing when y=6 that are 600.  So the probabyity is 1/6,but what about the inverse case? lets&#39; invert the case 1.we are on the same point as before but whe need to divide for the total case when x=3 insted as what we have done before.
 So 100/800=1/8;  now let&amp;rsquo;s consider P(X=3)= 1/(all the possible value of x )=1/6 and so P(y=6) is 1/8
 we have that the frist result P(x=3/y=6)=1/6 and the second result that is 1/8 we can easy spot that: 1/6=(1/8 * 1/6)/1/1/8 bring it to the formula P(x=3\y=6)=(P(y=6/x=3)*P(x=3))/P(y=6) and in general the Bayes theorem: P(A\B)=(P(B/A)*P(A))/P(B)  Statistical independence We have statistical independence between two variables when there is no correleation between the variables and so the probability(frequency) that an avent occur given another is the same as the probability that that event occur. in the bivariant matrix this mean that we have the same distrbution of frequency, in evry row and in the margin,or in evry column and the margin, and so we could say that the relative joint frequencies are equal to the products of the corresponding marginal frequencies.
[1]&amp;ldquo;url&amp;rdquo;:&amp;quot;Teorema_di_Bayes&amp;quot;
]]></content:encoded>
    </item>
    <item>
      <title>5_A</title>
      <link>https://www.matteobianchi.eu/statistics-posts/week_3/5a/</link>
      <pubDate>Tue, 05 Oct 2021 18:03:36 UT</pubDate>
      <dc:creator>Matteo Bianchi</dc:creator>
      <guid>https://www.matteobianchi.eu/statistics-posts/week_3/5a/</guid>
      <description>5_A assignament Request Compute - in both languages C# and VB.NET (and optionally in js) - a frequency distribution of the meaningful words from any text file and create a personal graphical representation of the corresponding &amp;ldquo;word cloud&amp;rdquo; (in case, can use animation if you wish), keeping into account the frequencies of the words.
My Solution   Code in C and VB.NET#
Main Form: public partial class Form1 : Form { public Form1() { InitializeComponent(); } SortedDictionary&amp;lt;String, int&amp;gt; wDstr = new SortedDictionary&amp;lt;string, int&amp;gt;(); private void Form1_Load(object sender, EventArgs e) { } private void button1_Click(object sender, EventArgs e) { var filePath = string.</description>
      <category domain="https://www.matteobianchi.eu/categories/statistic">Statistic</category>
      <content:encoded><![CDATA[5_A assignament Request Compute - in both languages C# and VB.NET (and optionally in js) - a frequency distribution of the meaningful words from any text file and create a personal graphical representation of the corresponding &amp;ldquo;word cloud&amp;rdquo; (in case, can use animation if you wish), keeping into account the frequencies of the words.
My Solution   Code in C and VB.NET#
Main Form: public partial class Form1 : Form { public Form1() { InitializeComponent(); } SortedDictionary&amp;lt;String, int&amp;gt; wDstr = new SortedDictionary&amp;lt;string, int&amp;gt;(); private void Form1_Load(object sender, EventArgs e) { } private void button1_Click(object sender, EventArgs e) { var filePath = string.Empty; openFileDialog1.InitialDirectory = &amp;#34;c:\\&amp;#34;; openFileDialog1.Filter = &amp;#34;txt files (*.txt)|*.txt|All files (*.*)|*.*&amp;#34;; openFileDialog1.FilterIndex = 2; openFileDialog1.RestoreDirectory = true; openFileDialog1.Title = &amp;#34;Select Text File&amp;#34;; if (openFileDialog1.ShowDialog() == DialogResult.OK) { //Get the path of specified file  filePath = openFileDialog1.FileName; //Read the contents of the file into a stream  using (StreamReader sr = new StreamReader(filePath)) { while (sr.Peek() &amp;gt;= 0) { string line = sr.ReadLine(); char[] delimiters = new char[] { &amp;#39; &amp;#39;, &amp;#39;\r&amp;#39;, &amp;#39;\n&amp;#39; }; string[] words = line.Split(delimiters, StringSplitOptions.RemoveEmptyEntries); int i = 0; foreach (string word in words) { if (!wDstr.TryGetValue(word, out i)) wDstr.Add(word, 1); else { wDstr.Remove(word); i&#43;&#43;; wDstr.Add(word, i); } } } } int j = 0; foreach(var w in wDstr) { chart1.Series[&amp;#34;Words&amp;#34;].Points.AddXY(w.Key, w.Value); } } } }  ]]></content:encoded>
    </item>
  </channel>
</rss>
